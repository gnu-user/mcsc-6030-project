name: Matrix Multipltication
description: >
    An assortment of matrix multiplication tests with square matrices of
    dimensions: 100, 500, and 1000 with integers, booleans, and floats
    uniformly distributed.
# The codes to execute for the tests 
codes:
    # The Baseline test to compare the other results to, done using numpy
    - name: baseline
      description: Baseline multiplication using NumPy
      file: baseline.py
      exec: python2
    # Naive implementation that operates on each row, column
    - name: naive
      description: Naive multiplicatin with O(n^3) complexity
      file: naive.py
      exec: python2
# The test data sets to execute the code against
tests:
    - name: assorted_bool
      description: >
          An assortment of matrix multiplication tests with square matrices of
          dimensions 100, 500, and 1000 with uniformly distributed booleans.
      dimensions: [25, 50, 75]
      type: bool
    - name: assorted_int
      description: >
          An assortment of matrix multiplication tests with square matrices of
          dimensions 100, 500, and 1000 with uniformly distributed ints.
      dimensions: [25, 50, 75]
      type: int32
    - name: assorted_float
      description: >
          An assortment of matrix multiplication tests with square matrices of
          dimensions 100, 500, and 1000 with uniformly distributed floats [0, 1).
      dimensions: [25, 50, 75]
      type: float
# The test plan, for each test which code to execute
testplan:
    - test: assorted_bool
      trials: 10
    - test: assorted_int
      trials: 10
    - test: assorted_float
      trials: 10
